generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                  String    @id @db.Uuid
  user_id             String    @db.Uuid
  plaid_account_id    String    @unique(map: "ix_accounts_plaid_account_id") @db.VarChar(255)
  name                String    @db.VarChar(255)
  type                String    @db.VarChar(50)
  subtype             String?   @db.VarChar(50)
  mask                String?   @db.VarChar(4)
  institution_name    String?   @db.VarChar(255)
  balance             Decimal?  @db.Decimal(18, 2)
  currency            String?   @db.VarChar(3)
  is_active           Boolean?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @db.Timestamptz(6)
  plaid_connection_id String?   @db.Uuid
  plaid_item_id       String?
  plaid_type          String?
  plaid_subtype       String?
  available_balance   Decimal?  @db.Decimal
  limit_amount        Decimal?  @db.Decimal
  institution_id      String?   @db.Uuid
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([plaid_account_id], map: "idx_accounts_plaid_id")
  @@index([user_id], map: "idx_accounts_user_id")
}

model agent_run_log {
  id                String    @id @db.Uuid
  user_id           String    @db.Uuid
  agent_name        String    @db.VarChar(100)
  input_data        Json?     @db.Json
  output_data       Json?     @db.Json
  sql_queries       Json?     @db.Json
  api_calls         Json?     @db.Json
  error_message     String?
  execution_time_ms Decimal?  @db.Decimal(10, 2)
  timestamp         DateTime? @default(now()) @db.Timestamptz(6)
  users             users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([agent_name], map: "idx_agent_run_log_agent_name")
  @@index([timestamp], map: "idx_agent_run_log_timestamp")
  @@index([user_id], map: "idx_agent_run_log_user_id")
}

model budget_categories {
  id         String    @id @db.Uuid
  budget_id  String    @db.Uuid
  category   String    @db.VarChar(100)
  amount     Decimal   @db.Decimal(18, 2)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  budgets    budgets   @relation(fields: [budget_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([budget_id], map: "idx_budget_categories_budget_id")
  @@index([category], map: "idx_budget_categories_category")
}

model budgets {
  id                String              @id @db.Uuid
  user_id           String              @db.Uuid
  name              String              @db.VarChar(255)
  description       String?
  amount            Decimal             @db.Decimal(18, 2)
  period            String?             @db.VarChar(20)
  start_date        DateTime            @db.Timestamptz(6)
  end_date          DateTime?           @db.Timestamptz(6)
  is_active         Boolean?
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  budget_categories budget_categories[]
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_budgets_user_id")
}

model business_ownership_details {
  id                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id      String        @db.Uuid
  business_name        String?
  ownership_percentage Decimal?      @db.Decimal
  valuation            Decimal?      @db.Decimal
  annual_income        Decimal?      @db.Decimal
  acquisition_date     DateTime?     @db.Date
  created_at           DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets        manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model chat_history {
  id         String    @id @db.Uuid
  user_id    String    @db.Uuid
  session_id String    @db.VarChar(255)
  message    String
  response   String
  intent     String?   @db.VarChar(100)
  confidence Decimal?  @db.Decimal(3, 2)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_chat_history_created_at")
  @@index([session_id], map: "idx_chat_history_session_id")
  @@index([user_id], map: "idx_chat_history_user_id")
  @@index([session_id], map: "ix_chat_history_session_id")
}

model chat_messages {
  id            String        @id @db.Uuid
  session_id    String        @db.Uuid
  message_type  String        @db.VarChar(20)
  content       String
  rich_content  Json?
  turn_number   Int
  created_at    DateTime      @db.Timestamptz(6)
  chat_sessions chat_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_chat_messages_created_at")
  @@index([session_id], map: "idx_chat_messages_session_id")
  @@index([turn_number], map: "idx_chat_messages_turn")
  @@index([message_type], map: "idx_chat_messages_type")
}

model chat_sessions {
  id            String          @id @db.Uuid
  user_id       String          @db.Uuid
  session_id    String          @db.VarChar(255)
  title         String?         @db.VarChar(255)
  is_active     Boolean
  created_at    DateTime        @db.Timestamptz(6)
  updated_at    DateTime        @db.Timestamptz(6)
  chat_messages chat_messages[]
  users         users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_chat_sessions_created_at")
  @@index([session_id], map: "idx_chat_sessions_session_id")
  @@index([user_id], map: "idx_chat_sessions_user_id")
  @@index([session_id], map: "ix_chat_sessions_session_id")
}

model collectible_details {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id  String        @db.Uuid
  category         String?
  description      String?
  acquisition_date DateTime?     @db.Date
  acquisition_cost Decimal?      @db.Decimal
  estimated_value  Decimal?      @db.Decimal
  appraisal_date   DateTime?     @db.Date
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets    manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model contribution_schedule {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id     String?  @db.Uuid
  user_id        String?  @db.Uuid
  monthly_amount Decimal? @db.Decimal(12, 2)
  employer_match Decimal? @db.Decimal(5, 2)
  users          users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estate_docs {
  id           String    @id @db.Uuid
  user_id      String    @db.Uuid
  type         String    @db.VarChar(100)
  name         String    @db.VarChar(255)
  description  String?
  file_path    String?   @db.VarChar(500)
  created_date DateTime? @db.Timestamptz(6)
  last_updated DateTime? @db.Timestamptz(6)
  is_active    Boolean?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([type], map: "idx_estate_docs_type")
  @@index([user_id], map: "idx_estate_docs_user_id")
}

model financial_insights {
  id           String    @id @db.Uuid
  user_id      String    @db.Uuid
  insight_type String    @db.VarChar(50)
  title        String    @db.VarChar(255)
  description  String
  severity     String    @db.VarChar(20)
  data         Json?
  is_read      Boolean
  expires_at   DateTime? @db.Timestamptz(6)
  created_at   DateTime  @db.Timestamptz(6)
  users        users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_financial_insights_created_at")
  @@index([severity], map: "idx_financial_insights_severity")
  @@index([insight_type], map: "idx_financial_insights_type")
  @@index([is_read], map: "idx_financial_insights_unread")
  @@index([user_id], map: "idx_financial_insights_user_id")
}

model goals {
  id             String    @id @db.Uuid
  user_id        String    @db.Uuid
  name           String    @db.VarChar(255)
  description    String?
  target_amount  Decimal   @db.Decimal(18, 2)
  current_amount Decimal?  @db.Decimal(18, 2)
  target_date    DateTime? @db.Timestamptz(6)
  priority       String?   @db.VarChar(20)
  is_active      Boolean?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @db.Timestamptz(6)
  users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_goals_user_id")
}

model holdings {
  id                String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_id        String?     @db.Uuid
  security_id       String?     @db.Uuid
  quantity          Decimal?    @db.Decimal(20, 6)
  cost_basis        Decimal?    @db.Decimal(18, 2)
  institution_price Decimal?    @db.Decimal(18, 6)
  institution_value Decimal?    @db.Decimal(18, 2)
  last_price_date   DateTime?   @db.Date
  created_at        DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?   @default(now()) @db.Timestamptz(6)
  securities        securities? @relation(fields: [security_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([account_id], map: "idx_holdings_account")
  @@index([security_id], map: "idx_holdings_security")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model institutions {
  id                   String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plaid_institution_id String?             @unique
  name                 String
  country_code         String?             @default("US") @db.Char(2)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  plaid_connections    plaid_connections[]

  @@index([name], map: "idx_institutions_name")
  @@index([plaid_institution_id], map: "idx_institutions_plaid_id")
}

model insurances {
  id              String    @id @db.Uuid
  user_id         String    @db.Uuid
  type            String    @db.VarChar(50)
  provider        String    @db.VarChar(255)
  policy_number   String?   @db.VarChar(255)
  premium_amount  Decimal?  @db.Decimal(18, 2)
  coverage_amount Decimal?  @db.Decimal(18, 2)
  start_date      DateTime? @db.Timestamptz(6)
  end_date        DateTime? @db.Timestamptz(6)
  is_active       Boolean?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([type], map: "idx_insurances_type")
  @@index([user_id], map: "idx_insurances_user_id")
}

model loan_details {
  account_id            String    @id @db.Uuid
  interest_rate         Decimal?  @db.Decimal(6, 3)
  origination_principal Decimal?  @db.Decimal(18, 2)
  origination_date      DateTime? @db.Date
  maturity_date         DateTime? @db.Date
  next_payment_due      DateTime? @db.Date
  next_payment_amount   Decimal?  @db.Decimal(18, 2)
  last_payment_date     DateTime? @db.Date
  last_payment_amount   Decimal?  @db.Decimal(18, 2)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
}

model manual_assets {
  id                         String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                    String?                      @db.Uuid
  name                       String
  asset_class                String?
  value                      Decimal?                     @db.Decimal(18, 2)
  notes                      String?
  created_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  business_ownership_details business_ownership_details[]
  collectible_details        collectible_details[]
  users                      users?                       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_manual_asset_details other_manual_asset_details[]
  other_manual_assets        other_manual_assets[]
  real_estate_details        real_estate_details[]
  vehicle_assets             vehicle_assets[]
  vehicle_details            vehicle_details[]

  @@index([user_id], map: "idx_manual_assets_user")
}

model manual_liabilities {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?   @db.Uuid
  name            String
  liability_class String?
  balance         Decimal?  @db.Decimal(18, 2)
  interest_rate   Decimal?  @db.Decimal(6, 3)
  notes           String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  users           users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_manual_liabilities_user")
}

model other_manual_asset_details {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id  String        @db.Uuid
  description      String?
  category         String?
  acquisition_date DateTime?     @db.Date
  acquisition_cost Decimal?      @db.Decimal
  estimated_value  Decimal?      @db.Decimal
  notes            String?
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets    manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model other_manual_assets {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id  String        @db.Uuid
  description      String?
  category         String?
  acquisition_cost Decimal?      @db.Decimal
  estimated_value  Decimal?      @db.Decimal
  acquisition_date DateTime?     @db.Date
  valuation_date   DateTime?     @db.Date
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets    manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plaid_account_taxonomy {
  type    String
  subtype String

  @@id([type, subtype])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plaid_connections {
  id                        String        @id @db.Uuid
  user_id                   String        @db.Uuid
  plaid_access_token        String        @db.VarChar(255)
  plaid_item_id             String        @db.VarChar(255)
  plaid_institution_id_text String        @db.VarChar(255)
  is_active                 Boolean
  last_sync_at              DateTime?     @db.Timestamptz(6)
  created_at                DateTime      @db.Timestamptz(6)
  updated_at                DateTime      @db.Timestamptz(6)
  institution_id            String?       @db.Uuid
  institution_name          String?
  institutions              institutions? @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_plaid_connections_institution")
  users                     users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([plaid_institution_id_text], map: "idx_plaid_connections_institution")
  @@index([plaid_item_id], map: "idx_plaid_connections_item_id")
  @@index([user_id], map: "idx_plaid_connections_user_id")
}

model real_estate_details {
  id                     String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id        String        @db.Uuid
  address                String?
  property_type          String?
  is_primary_residence   Boolean?      @default(false)
  purchase_price         Decimal?      @db.Decimal
  purchase_date          DateTime?     @db.Date
  market_value           Decimal?      @db.Decimal
  valuation_date         DateTime?     @db.Date
  appreciation_rate      Decimal?      @db.Decimal
  property_tax_rate      Decimal?      @db.Decimal
  annual_maintenance     Decimal?      @db.Decimal
  mortgage_account_id    String?       @db.Uuid
  created_at             DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?     @default(now()) @db.Timestamptz(6)
  gross_monthly_rent     Decimal?      @db.Decimal
  other_income_annual    Decimal?      @db.Decimal
  vacancy_pct            Decimal?      @db.Decimal
  property_mgmt_pct      Decimal?      @db.Decimal
  insurance_annual       Decimal?      @db.Decimal
  hoa_annual             Decimal?      @db.Decimal
  utilities_owner_annual Decimal?      @db.Decimal
  capex_reserve_pct      Decimal?      @db.Decimal
  manual_assets          manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model recurring_income {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  source        String?
  gross_monthly Decimal?  @db.Decimal(12, 2)
  next_pay_date DateTime? @db.Date
  inflation_adj Boolean?  @default(true)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model securities {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String?
  ticker        String?
  security_type String?
  cusip         String?
  isin          String?
  currency      String?    @default("USD") @db.Char(3)
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  holdings      holdings[]
}

model tax_profile {
  user_id       String   @id @db.Uuid
  filing_status String?
  state         String?  @db.Char(2)
  federal_rate  Decimal? @db.Decimal(4, 2)
  state_rate    Decimal? @db.Decimal(4, 2)
  users         users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transactions {
  id                   String   @id @db.Uuid
  user_id              String   @db.Uuid
  account_id           String   @db.Uuid
  plaid_transaction_id String   @unique @db.VarChar(255)
  amount               Float
  currency_code        String   @db.VarChar(3)
  date                 DateTime @db.Timestamptz(6)
  name                 String   @db.VarChar(255)
  merchant_name        String?  @db.VarChar(255)
  category             String?  @db.VarChar(100)
  category_id          String?  @db.VarChar(50)
  pending              Boolean
  payment_channel      String?  @db.VarChar(50)
  transaction_type     String?  @db.VarChar(50)
  location             Json?
  payment_meta         Json?
  created_at           DateTime @db.Timestamptz(6)
  pfc_primary          String?
  pfc_detailed         String?
  users                users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([account_id], map: "idx_transactions_account_id")
  @@index([amount], map: "idx_transactions_amount")
  @@index([category], map: "idx_transactions_category")
  @@index([date], map: "idx_transactions_date")
  @@index([pfc_detailed], map: "idx_transactions_pfc_detailed")
  @@index([pfc_primary], map: "idx_transactions_pfc_primary")
  @@index([plaid_transaction_id], map: "idx_transactions_plaid_id")
  @@index([user_id], map: "idx_transactions_user_id")
  @@index([user_id, date(sort: Desc)], map: "idx_txn_user_date")
}

model user_identity {
  user_id       String    @id @db.Uuid
  full_name     String?
  phone_primary String?
  email_primary String?
  street        String?
  city          String?
  state         String?
  postal_code   String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_preferences {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String   @unique @db.Uuid
  theme                 String   @db.VarChar(20)
  notifications_enabled Boolean
  email_notifications   Boolean
  push_notifications    Boolean
  currency              String   @db.VarChar(3)
  timezone              String   @db.VarChar(50)
  language              String   @db.VarChar(10)
  financial_goals       Json?
  risk_tolerance        String?  @db.VarChar(20)
  investment_horizon    String?  @db.VarChar(20)
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  users                 users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_preferences_user_id")
}

model users {
  id                    String                  @id @db.Uuid
  email                 String                  @unique(map: "ix_users_email") @db.VarChar(255)
  first_name            String                  @db.VarChar(100)
  last_name             String                  @db.VarChar(100)
  password_hash         String                  @db.VarChar(255)
  is_active             Boolean
  is_advisor            Boolean
  created_at            DateTime                @db.Timestamptz(6)
  updated_at            DateTime                @db.Timestamptz(6)
  accounts              accounts[]
  agent_run_log         agent_run_log[]
  budgets               budgets[]
  chat_history          chat_history[]
  chat_sessions         chat_sessions[]
  contribution_schedule contribution_schedule[]
  estate_docs           estate_docs[]
  financial_insights    financial_insights[]
  goals                 goals[]
  insurances            insurances[]
  manual_assets         manual_assets[]
  manual_liabilities    manual_liabilities[]
  onboarding_progress   onboarding_progress?
  plaid_connections     plaid_connections[]
  recurring_income      recurring_income[]
  tax_profile           tax_profile?
  transactions          transactions[]
  user_identity         user_identity?
  user_onboarding_responses user_onboarding_responses[]
  user_preferences      user_preferences?

  @@index([created_at], map: "idx_users_created_at")
  @@index([email], map: "idx_users_email")
}

model user_onboarding_responses {
  id         Int      @id @default(autoincrement())
  user_id    String   @db.Uuid
  question   String
  answer     String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_onboarding_responses_user_id")
  @@index([question], map: "idx_user_onboarding_responses_question")
}

model onboarding_progress {
  id           Int      @id @default(autoincrement())
  user_id      String   @unique @db.Uuid
  current_step String
  is_complete  Boolean  @default(false)
  updated_at   DateTime @default(now()) @db.Timestamptz(6)
  users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_onboarding_progress_user_id")
}

model vehicle_assets {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id String        @db.Uuid
  make            String?
  model           String?
  year            Int?
  vin             String?
  purchase_price  Decimal?      @db.Decimal
  purchase_date   DateTime?     @db.Date
  mileage         Int?
  estimated_value Decimal?      @db.Decimal
  valuation_date  DateTime?     @db.Date
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets   manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model vehicle_details {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manual_asset_id String        @db.Uuid
  vin             String?
  make            String?
  model           String?
  year            Int?
  mileage         Decimal?      @db.Decimal
  purchase_price  Decimal?      @db.Decimal
  purchase_date   DateTime?     @db.Date
  estimated_value Decimal?      @db.Decimal
  loan_account_id String?       @db.Uuid
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @default(now()) @db.Timestamptz(6)
  manual_assets   manual_assets @relation(fields: [manual_asset_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
